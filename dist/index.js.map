{"version":3,"file":"index.js","sources":["../src/theme-debug/styles.ts","../src/theme-provider/Context.ts","../src/use-theme-config/useThemeConfig.ts","../src/use-styling/useStyling.ts","../src/theme-debug/ThemeDebug.tsx","../src/theme-provider/ThemeProvider.tsx"],"sourcesContent":["import { ViewStyle, TextStyle } from 'react-native'\nimport StyleDefType from '../types/theme-styles.types'\n\nexport type StyleGuide = {\n    /** Styles for the action button */\n    button: ViewStyle\n    /** Defines a container for information */\n    column: ViewStyle\n    /** Styles for the left label */\n    columnLabel: TextStyle\n    /** Styles for the value */\n    columnValue: TextStyle\n    /** Main styles */\n    root: ViewStyle\n    /** Complete row styling */\n    row: ViewStyle\n}\nexport type Params = {\n    opened?: boolean\n}\n\nconst styles: StyleDefType<StyleGuide, Params> = ({ palette, selIf, params }) => ({\n    button: {\n        backgroundColor: palette.secondaryColor,\n        padding: 10,\n        position: 'absolute',\n        right: 0,\n        top: 0\n    },\n    column: {\n        flex: 1,\n        flexDirection: 'row'\n    },\n    root: {\n        backgroundColor: palette.primaryColor,\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        height: selIf(params?.opened, 150, 40)\n    },\n    row: {\n        flexDirection: 'row'\n    }\n})\n\nexport default styles\n","import React from 'react'\nimport { ThemeProviderContextType } from '../types/theme-provider.types'\nimport { PaletteConfigType } from '../types/palette.types'\n\nexport const ThemeProviderContext = React.createContext<ThemeProviderContextType>({\n    changeTheme: () => {},\n    dimensions: { width: 0, height: 0 },\n    mode: 'light',\n    orientation: 'portrait',\n    palette: {} as PaletteConfigType,\n    selectedTheme: '',\n    variables: {}\n})\n\nexport const Provider = ThemeProviderContext.Provider\nexport const Consumer = ThemeProviderContext.Consumer\n","import React from 'react'\nimport { ThemeProviderContext } from '../theme-provider/Context'\n/**\n * Hook to get the theme config from the theme provider context.\n * @author Jorge Alejandro Quiroz Serna <alejandro.devop@gmail.com>\n * @returns {ThemeProviderContextType}\n * @since 0.0.1\n * @version 0.0.1\n */\nconst useThemeConfig = () => {\n    const themeConfig = React.useContext(ThemeProviderContext)\n    return themeConfig\n}\n\nexport default useThemeConfig\n","import React from 'react'\nimport StyleDefType from '../types/theme-styles.types'\nimport useThemeConfig from '../use-theme-config/useThemeConfig'\nimport { StyleProp, StyleSheet } from 'react-native'\n\n/**\n * Hook to create styles for your components\n * @author Alejandro Quiroz <alejandro.devop@gmail.com>\n * @version 0.0.1\n * @since 0.0.1\n * @param stylingConfig Styling configuration, can be a function or an object\n * @param params Object containing params for the styling function.\n * @returns\n */\nconst useStyling = <StyleGuide extends object, Params extends object = {}>(\n    stylingConfig: StyleDefType<StyleGuide, Params>,\n    params?: Params\n): StyleSheet.NamedStyles<StyleGuide> => {\n    const { palette } = useThemeConfig()\n    const classes = React.useMemo(() => {\n        let processed = {}\n        // Check if the styling config is a function\n        if (stylingConfig instanceof Function) {\n            /**\n             * The styling config is called and we passed the values defined from the context\n             * as an argument, so de styling function can operate\n             */\n            processed = stylingConfig({\n                palette,\n                params,\n                selIf: _helperSelIf\n            })\n        }\n        return StyleSheet.create(processed)\n    }, [params])\n\n    return classes as StyleSheet.NamedStyles<StyleGuide>\n}\n\nconst _helperSelIf = (cond?: boolean, trueVal?: StyleProp<any>, falseVal?: StyleProp<any>) =>\n    cond ? trueVal : falseVal\n\nexport default useStyling\n","import * as React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\nimport styles, { StyleGuide, Params } from './styles'\nimport useStyling from '../use-styling/useStyling'\nimport useThemeConfig from '../use-theme-config/useThemeConfig'\n/**\n * Renders information about the selected theme\n * @author Alejandro Quiroz <alejandro.devop@gmail.com>\n * @since 0.0.1\n * @version 0.0.1\n * @returns {React.ReactNode}\n */\nconst ThemeDebug: React.FC = () => {\n    const { selectedTheme } = useThemeConfig()\n    const [opened, setOpened] = React.useState(false)\n    const styling = useStyling<StyleGuide, Params>(styles, { opened })\n    const toggleOpen = () => setOpened(!opened)\n\n    return (\n        <View style={styling.root}>\n            <View style={styling.row}>\n                <View style={styling.column}>\n                    <Text style={[styling.columnLabel]}>Theme:</Text>\n                    <Text style={[styling.columnValue, styling.column]}>{selectedTheme}</Text>\n                </View>\n                <View style={styling.column}>\n                    <TouchableOpacity style={styling.button} onPress={toggleOpen}>\n                        <Text>{opened ? 'Close' : 'Open'}</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    )\n}\n\nexport default ThemeDebug\n","import React from 'react'\nimport { ThemeProviderConfig } from './../types'\nimport ThemeDebug from '../theme-debug/ThemeDebug'\nimport { PaletteConfigType } from '../types/palette.types'\nimport { Provider } from './Context'\nimport ThemeConfigType from '../../dist/types/theme-config.types'\n\n/**\n * Provider for theming react-native applications\n * @param param0\n * @author Alejandro Quiroz <alejandro.devop@gmail.com>\n * @version 0.0.1\n * @since 0.0.1\n * @returns {React.ReactNode}\n */\nconst ThemeProvider: React.FC<React.PropsWithChildren<ThemeProviderConfig>> = ({\n    children,\n    defaultTheme,\n    mode,\n    themes,\n    debug\n}) => {\n    const [selectedTheme] = React.useState(defaultTheme || 'default')\n    // const [appMode] = useState(mode || 'light')\n    // const [orientation] = useState<'portrait' | 'landscape'>('portrait')\n    const appMode = mode || 'light'\n    const paletteMode = 'default'\n    const orientation = 'portrait'\n    const handleChangeTheme = (newTheme: string) => {\n        // setSelectedTheme(newTheme)\n        console.log('Theme: ', newTheme)\n    }\n    const { palette, variables } = themes[selectedTheme] || ({} as ThemeConfigType)\n    const paletteConfig = palette[paletteMode] || ({} as PaletteConfigType)\n\n    return (\n        <Provider\n            value={{\n                changeTheme: handleChangeTheme,\n                dimensions: { width: 100, height: 100 },\n                mode: appMode,\n                orientation,\n                palette: paletteConfig,\n                selectedTheme: selectedTheme,\n                variables\n            }}\n        >\n            {children}\n            {debug && <ThemeDebug />}\n        </Provider>\n    )\n}\n\nThemeProvider.defaultProps = {\n    defaultTheme: 'main',\n    mode: 'light',\n    darkModeDetection: false\n}\n\nexport default ThemeProvider\n"],"names":["React","StyleSheet","View","Text","TouchableOpacity"],"mappings":"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"}